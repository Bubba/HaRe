Cases: 20  Tried: 0  Errors: 0  Failures: 0Cases: 20  Tried: 1  Errors: 0  Failures: 0Cases: 20  Tried: 2  Errors: 0  Failures: 0Cases: 20  Tried: 3  Errors: 0  Failures: 0Cases: 20  Tried: 4  Errors: 0  Failures: 0Cases: 20  Tried: 5  Errors: 0  Failures: 0Cases: 20  Tried: 6  Errors: 0  Failures: 0Cases: 20  Tried: 7  Errors: 0  Failures: 0Cases: 20  Tried: 8  Errors: 0  Failures: 0Cases: 20  Tried: 9  Errors: 0  Failures: 0Cases: 20  Tried: 10  Errors: 0  Failures: 0Cases: 20  Tried: 11  Errors: 0  Failures: 0Cases: 20  Tried: 12  Errors: 0  Failures: 0Cases: 20  Tried: 13  Errors: 0  Failures: 0Cases: 20  Tried: 14  Errors: 0  Failures: 0Cases: 20  Tried: 15  Errors: 0  Failures: 0Cases: 20  Tried: 16  Errors: 0  Failures: 0Cases: 20  Tried: 17  Errors: 0  Failures: 0Cases: 20  Tried: 18  Errors: 0  Failures: 0Cases: 20  Tried: 19  Errors: 0  Failures: 0                                            Cases: 20  Tried: 20  Errors: 0  Failures: 0
ase/tests/HaskellLibraries//Prelude.hs
Adding Ix from ../../tools/base/tests/HaskellLibraries//Ix.hs
Adding PreludeBuiltin from ../../tools/base/tests/HaskellLibraries//PreludeBuiltin.hs
Adding PreludeIO from ../../tools/base/tests/HaskellLibraries//PreludeIO.hs
Adding PreludeList from ../../tools/base/tests/HaskellLibraries//PreludeList.hs
Adding Char from ../../tools/base/tests/HaskellLibraries//Char.hs
Adding Array from ../../tools/base/tests/HaskellLibraries//Array.hs
Adding List from ../../tools/base/tests/HaskellLibraries//List.hs
Adding Maybe from ../../tools/base/tests/HaskellLibraries//Maybe.hs
Adding Numeric from ../../tools/base/tests/HaskellLibraries//Numeric.hs
Adding Ratio from ../../tools/base/tests/HaskellLibraries//Ratio.hs
Adding PreludeText from ../../tools/base/tests/HaskellLibraries//PreludeText.hs
Adding Complex from ../../tools/base/tests/HaskellLibraries//Complex.hs
The project contains 33 source files.
(To list the files, use: pfe files)
Source files missing for (add files with 'pfe add' or 'pfe chase'): 
    Complex_Vectors, needed by Fourier
    Control.Parallel.Strategies, needed by A1 A2 A3 A4 B1
                                           B2 B3 Case1 Case2 Fourier Let1
                                           ListComp1 Neg1 Neg2 Neg3 Qualified2
                                           Scope1 Scope2 Scope3 Triple1
CMD:["stop"]
CMD:["chase","."]
Adding Control.Parallel.Strategies from ./Control/Parallel/Strategies.hs
Adding Control.Applicative from ./Control/Applicative.hs
Adding Control.Arrow from ./Control/Arrow.hs
Adding Control.Monad from ./Control/Monad.hs
Adding Data.Maybe from ./Data/Maybe.hs
Adding Control.Monad.Fix from ./Control/Monad/Fix.hs
Adding Control.Monad.Instances from ./Control/Monad/Instances.hs
Adding Data.Function from ./Data/Function.hs
Adding System.IO from ./System/IO.hs
Adding Control.Monad from ./Control/Monad.hs
Adding Control.Monad.Instances from ./Control/Monad/Instances.hs
Adding Data.Monoid from ./Data/Monoid.hs
Adding Control.DeepSeq from ./Control/DeepSeq.hs
Adding Data.Array from ./Data/Array.hs
Adding Data.Ix from ./Data/Ix.hs
Adding Data.Typeable from ./Data/Typeable.hs
Adding Data.Either from ./Data/Either.hs
Adding Data.HashTable from ./Data/HashTable.hs
Adding Data.Bits from ./Data/Bits.hs
Adding Data.Char from ./Data/Char.hs
Adding Data.IORef from ./Data/IORef.hs
Adding Data.List from ./Data/List.hs
Adding Data.Tuple from ./Data/Tuple.hs
Adding System.IO.Unsafe from ./System/IO/Unsafe.hs
Adding Data.List from ./Data/List.hs
Adding Data.Word from ./Data/Word.hs
Adding Unsafe.Coerce from ./Unsafe/Coerce.hs
Adding Data.Complex from ./Data/Complex.hs
Adding Data.IntMap from ./Data/IntMap.hs
Adding Data.Foldable from ./Data/Foldable.hs
Adding Data.IntSet from ./Data/IntSet.hs
Adding Data.IntSet from ./Data/IntSet.hs
Adding Data.Map from ./Data/Map.hs
Adding Data.Generics.Basics from ./Data/Generics/Basics.hs
Adding Data.Generics.Instances from ./Data/Generics/Instances.hs
Adding Data.Traversable from ./Data/Traversable.hs
Adding Text.Read from ./Text/Read.hs
Adding Data.Ratio from ./Data/Ratio.hs
Adding Data.Tree from ./Data/Tree.hs
Adding Data.Word from ./Data/Word.hs
Adding Control.Monad from ./Control/Monad.hs
Adding Control.Parallel from ./Control/Parallel.hs
Adding Control.Seq from ./Control/Seq.hs
Adding Data.Traversable from ./Data/Traversable.hs
Adding Complex_Vectors from Complex_Vectors.hs
The project contains 71 source files.
(To list the files, use: pfe files)
CMD:["stop"]
CMD:["refacAddEvalMonCache","A1.hs","11","7","15","36"]
refacAddEvalMonCache
Analyzing: A1.hs
Saving to /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
RefacAddEvalMonCache Completed.
CMD:["stop"]
CMD:["refacEvalMon","A1.hs","10","8","10","10"]
Grabbing monad from /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
Using activated Eval Monad.
thePat: Pat (HsPId (HsVar (PNT (PN (UnQual "n1_2") (S ("A1.hs",187,11,8))) Value (N (Just ("A1.hs",187,11,8))))))
modified: A1.hs
refacEvalMon completed.
CMD:["stop"]
CMD:["refacAddEvalMonCache","A2.hs","10","4","14","32"]
refacAddEvalMonCache
Analyzing: A2.hs
Saving to /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
RefacAddEvalMonCache Completed.
CMD:["stop"]
CMD:["refacEvalMon","A2.hs","9","4","9","6"]
Grabbing monad from /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
Using activated Eval Monad.
thePat: Pat (HsPId (HsVar (PNT (PN (UnQual "n1_2") (S ("A2.hs",150,10,4))) Value (N (Just ("A2.hs",150,10,4))))))
modified: A2.hs
refacEvalMon completed.
CMD:["stop"]
CMD:["refacAddEvalMonCache","A3.hs","12","4","16","32"]
refacAddEvalMonCache
Analyzing: A3.hs
Saving to /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
RefacAddEvalMonCache Completed.
CMD:["stop"]
CMD:["refacEvalMon","A3.hs","8","4","8","6"]
Grabbing monad from /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
Using activated Eval Monad.
thePat: Pat (HsPId (HsVar (PNT (PN (UnQual "n1_2") (S ("A3.hs",206,12,4))) Value (N (Just ("A3.hs",206,12,4))))))
modified: A3.hs
refacEvalMon completed.
CMD:["stop"]
CMD:["refacAddEvalMonCache","A4.hs","22","1","26","33"]
refacAddEvalMonCache
Analyzing: A4.hs
Saving to /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
RefacAddEvalMonCache Completed.
CMD:["stop"]
CMD:["refacEvalMon","A4.hs","16","1","16","14"]
Grabbing monad from /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
Using activated Eval Monad.
thePat: Pat (HsPId (HsVar (PNT (PN (UnQual "bigFib_2") (G (PlainModule "A4") "bigFib_2" (N (Just ("A4.hs",314,22,1))))) Value (N (Just ("A4.hs",314,22,1))))))
modified: A4.hs
refacEvalMon completed.
CMD:["stop"]
CMD:["refacAddEvalMonCache","B1.hs","11","5","15","36"]
refacAddEvalMonCache
Analyzing: B1.hs
Saving to /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
RefacAddEvalMonCache Completed.
CMD:["stop"]
CMD:["refacEvalMon","B1.hs","10","5","10","10"]
Grabbing monad from /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
Using activated Eval Monad.
thePat: Pat (HsPId (HsVar (PNT (PN (UnQual "lsort_2") (S ("B1.hs",248,11,5))) Value (N (Just ("B1.hs",248,11,5))))))
modified: B1.hs
refacEvalMon completed.
CMD:["stop"]
CMD:["refacAddEvalMonCache","B2.hs","13","5","17","36"]
refacAddEvalMonCache
Analyzing: B2.hs
Saving to /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
RefacAddEvalMonCache Completed.
CMD:["stop"]
CMD:["refacEvalMon","B2.hs","12","5","12","10"]
Grabbing monad from /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
Using activated Eval Monad.
thePat: Pat (HsPId (HsVar (PNT (PN (UnQual "lsort_2") (S ("B2.hs",328,13,5))) Value (N (Just ("B2.hs",328,13,5))))))
modified: B2.hs
refacEvalMon completed.
CMD:["stop"]
CMD:["refacAddEvalMonCache","B3.hs","13","5","17","36"]
refacAddEvalMonCache
Analyzing: B3.hs
Saving to /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
RefacAddEvalMonCache Completed.
CMD:["stop"]
CMD:["refacEvalMon","B3.hs","11","5","11","10"]
Grabbing monad from /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
Using activated Eval Monad.
thePat: Pat (HsPId (HsVar (PNT (PN (UnQual "hsort_2") (S ("B3.hs",326,13,5))) Value (N (Just ("B3.hs",326,13,5))))))
modified: B3.hs
refacEvalMon completed.
CMD:["stop"]
CMD:["refacAddEvalMonCache","Case1.hs","14","23","18","51"]
refacAddEvalMonCache
Analyzing: Case1.hs
Saving to /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
RefacAddEvalMonCache Completed.
CMD:["stop"]
CMD:["refacEvalMon","Case1.hs","11","24","11","26"]
Grabbing monad from /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
Using activated Eval Monad.
thePat: Pat (HsPId (HsVar (PNT (PN (UnQual "n1_2") (S ("Case1.hs",257,14,23))) Value (N (Just ("Case1.hs",257,14,23))))))
modified: Case1.hs
refacEvalMon completed.
CMD:["stop"]
CMD:["refacAddEvalMonCache","Case2.hs","14","27","18","60"]
refacAddEvalMonCache
Analyzing: Case2.hs
Saving to /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
RefacAddEvalMonCache Completed.
CMD:["stop"]
CMD:["refacEvalMon","Case2.hs","11","24","11","26"]
Grabbing monad from /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
Using activated Eval Monad.
thePat: Pat (HsPId (HsVar (PNT (PN (UnQual "n1_3") (S ("Case2.hs",284,14,28))) Value (N (Just ("Case2.hs",284,14,28))))))
modified: Case2.hs
refacEvalMon completed.
CMD:["stop"]
CMD:["refacAddEvalMonCache","Fourier.hs","27","3","31","36"]
refacAddEvalMonCache
Analyzing: Fourier.hs
Saving to /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
RefacAddEvalMonCache Completed.
CMD:["stop"]
CMD:["refacEvalMon","Fourier.hs","22","4","22","10"]
Grabbing monad from /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
Using activated Eval Monad.
thePat: Pat (HsPId (HsVar (PNT (PN (UnQual "fftEvn_2") (S ("Fourier.hs",661,27,4))) Value (N (Just ("Fourier.hs",661,27,4))))))
modified: Fourier.hs
refacEvalMon completed.
CMD:["stop"]
CMD:["refacAddEvalMonCache","Let1.hs","10","25","14","53"]
refacAddEvalMonCache
Analyzing: Let1.hs
Saving to /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
RefacAddEvalMonCache Completed.
CMD:["stop"]
CMD:["refacEvalMon","Let1.hs","9","25","9","27"]
Grabbing monad from /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
Using activated Eval Monad.
thePat: Pat (HsPId (HsVar (PNT (PN (UnQual "n1_2") (S ("Let1.hs",198,10,25))) Value (N (Just ("Let1.hs",198,10,25))))))
modified: Let1.hs
refacEvalMon completed.
CMD:["stop"]
CMD:["refacAddEvalMonCache","Qualified2.hs","16","8","20","36"]
refacAddEvalMonCache
Analyzing: Qualified2.hs
Saving to /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
RefacAddEvalMonCache Completed.
CMD:["stop"]
CMD:["refacEvalMon","Qualified2.hs","15","8","15","10"]
Grabbing monad from /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
Using activated Eval Monad.
thePat: Pat (HsPId (HsVar (PNT (PN (UnQual "n1_2") (S ("Qualified2.hs",306,16,8))) Value (N (Just ("Qualified2.hs",306,16,8))))))
modified: Qualified2.hs
refacEvalMon completed.
CMD:["stop"]
CMD:["refacAddEvalMonCache","Scope1.hs","10","10","11","41"]
refacAddEvalMonCache
Saving to /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
RefacAddEvalMonCache Completed.
CMD:["stop"]
CMD:["refacEvalMon","Scope1.hs","16","9","16","12"]
Grabbing monad from /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
Using activated Eval Monad.
thePat: Pat (HsPId (HsVar (PNT (PN (UnQual "n1") (S ("Scope1.hs",194,10,11))) Value (N (Just ("Scope1.hs",194,10,11))))))
modified: Scope1.hs
refacEvalMon completed.
CMD:["stop"]
CMD:["refacAddEvalMonCache","Scope2.hs","10","10","11","40"]
refacAddEvalMonCache
Saving to /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
RefacAddEvalMonCache Completed.
CMD:["stop"]
CMD:["refacEvalMon","Scope2.hs","16","9","16","12"]
Grabbing monad from /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
Using activated Eval Monad.
thePat: Pat (HsPId (HsVar (PNT (PN (UnQual "n1") (S ("Scope2.hs",193,10,10))) Value (N (Just ("Scope2.hs",193,10,10))))))
modified: Scope2.hs
refacEvalMon completed.
CMD:["stop"]
CMD:["refacAddEvalMonCache","Triple1.hs","10","10","11","47"]
refacAddEvalMonCache
Analyzing: Triple1.hs
Saving to /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
RefacAddEvalMonCache Completed.
CMD:["stop"]
CMD:["refacEvalMon","Triple1.hs","21","9","21","12"]
Grabbing monad from /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
Using activated Eval Monad.
thePat: Pat (HsPTuple ("Triple1.hs",195,10,11) [Pat (HsPId (HsVar (PNT (PN (UnQual "n1") (S ("Triple1.hs",196,10,12))) Value (N (Just ("Triple1.hs",196,10,12)))))),Pat (HsPId (HsVar (PNT (PN (UnQual "n22_2") (S ("Triple1.hs",200,10,16))) Value (N (Just ("Triple1.hs",200,10,16))))))])
modified: Triple1.hs
refacEvalMon completed.
CMD:["stop"]
CMD:["refacAddEvalMonCache","Scope3.hs","9","1","9","36"]
refacAddEvalMonCache
Analyzing: Scope3.hs
Saving to /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
RefacAddEvalMonCache Completed.
CMD:["stop"]
CMD:["refacEvalMon","Scope3.hs","7","1","7","2"]
Grabbing monad from /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
Using activated Eval Monad.
thePat: Pat (HsPId (HsVar (PNT (PN (UnQual "g") (G (PlainModule "Scope3") "g" (N (Just ("Scope3.hs",76,9,1))))) Value (N (Just ("Scope3.hs",76,9,1))))))
modified: Scope3.hs
refacEvalMon completed.
CMD:["stop"]
CMD:["refacAddEvalMonCache","Neg3.hs","9","1","9","35"]
refacAddEvalMonCache
Analyzing: Neg3.hs
Saving to /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
RefacAddEvalMonCache Completed.
CMD:["stop"]
CMD:["refacEvalMon","Neg3.hs","7","1","7","2"]
Grabbing monad from /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
Using activated Eval Monad.
thePat: Pat (HsPId (HsVar (PNT (PN (UnQual "g") (G (PlainModule "Neg3") "g" (N (Just ("Neg3.hs",74,9,1))))) Value (N (Just ("Neg3.hs",74,9,1))))))
modified: Neg3.hs
refacEvalMon completed.
CMD:["stop"]
CMD:["refacAddEvalMonCache","ListComp1.hs","10","20","14","51"]
refacAddEvalMonCache
Analyzing: ListComp1.hs
Saving to /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
RefacAddEvalMonCache Completed.
CMD:["stop"]
CMD:["refacEvalMon","ListComp1.hs","15","27","15","28"]
Grabbing monad from /Users/chrisbrown/hare/parallel/HaRe/editors/../refactorer/evalMon/evalCache.txt
Using activated Eval Monad.
thePat: Pat (HsPId (HsVar (PNT (PN (UnQual "p_2") (S ("ListComp1.hs",218,10,24))) Value (N (Just ("ListComp1.hs",218,10,24))))))
modified: ListComp1.hs
refacEvalMon completed.
CMD:["stop"]
CMD:["refacEvalMon","Neg1.hs","5","1","5","9"]
message: CAUGHT EXCEPTION: Cannot spark a function! Please select a pattern binding instead.
CMD:["stop"]
CMD:["refacEvalMon","Neg2.hs","5","1","5","9"]
message: CAUGHT EXCEPTION: Cannot spark a function! Please select a pattern binding instead.
CMD:["stop"]
