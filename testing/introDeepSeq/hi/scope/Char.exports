[("Char",Ent (PlainModule "Prelude") (HsCon "Char") (Type (TypeInfo {defType = Just Primitive, constructors = [], fields = []}))),("String",Ent (PlainModule "Prelude") (HsCon "String") (Type (TypeInfo {defType = Just Synonym, constructors = [], fields = []}))),("chr",Ent (PlainModule "Char") (HsVar "chr") Value),("digitToInt",Ent (PlainModule "Char") (HsVar "digitToInt") Value),("intToDigit",Ent (PlainModule "Char") (HsVar "intToDigit") Value),("isAlpha",Ent (PlainModule "Char") (HsVar "isAlpha") Value),("isAlphaNum",Ent (PlainModule "Char") (HsVar "isAlphaNum") Value),("isAscii",Ent (PlainModule "Char") (HsVar "isAscii") Value),("isControl",Ent (PlainModule "Char") (HsVar "isControl") Value),("isDigit",Ent (PlainModule "Char") (HsVar "isDigit") Value),("isHexDigit",Ent (PlainModule "Char") (HsVar "isHexDigit") Value),("isLatin1",Ent (PlainModule "Char") (HsVar "isLatin1") Value),("isLower",Ent (PlainModule "Char") (HsVar "isLower") Value),("isOctDigit",Ent (PlainModule "Char") (HsVar "isOctDigit") Value),("isPrint",Ent (PlainModule "Char") (HsVar "isPrint") Value),("isSpace",Ent (PlainModule "Char") (HsVar "isSpace") Value),("isUpper",Ent (PlainModule "Char") (HsVar "isUpper") Value),("lexLitChar",Ent (PlainModule "Char") (HsVar "lexLitChar") Value),("ord",Ent (PlainModule "Char") (HsVar "ord") Value),("readLitChar",Ent (PlainModule "Char") (HsVar "readLitChar") Value),("showLitChar",Ent (PlainModule "Char") (HsVar "showLitChar") Value),("toLower",Ent (PlainModule "Char") (HsVar "toLower") Value),("toUpper",Ent (PlainModule "Char") (HsVar "toUpper") Value)]