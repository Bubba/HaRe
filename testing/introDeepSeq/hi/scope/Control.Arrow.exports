[("&&&",Ent (PlainModule "Control.Arrow") (HsVar "&&&") (MethodOf "Arrow" 0 ["&&&"])),("***",Ent (PlainModule "Control.Arrow") (HsVar "***") (MethodOf "Arrow" 0 ["***"])),("+++",Ent (PlainModule "Control.Arrow") (HsVar "+++") (MethodOf "ArrowChoice" 1 ["+++"])),("<+>",Ent (PlainModule "Control.Arrow") (HsVar "<+>") (MethodOf "ArrowPlus" 1 ["<+>"])),("<<<",Ent (PlainModule "Control.Arrow") (HsVar "<<<") Value),("<<^",Ent (PlainModule "Control.Arrow") (HsVar "<<^") Value),(">>>",Ent (PlainModule "Control.Arrow") (HsVar ">>>") (MethodOf "Arrow" 0 [">>>"])),(">>^",Ent (PlainModule "Control.Arrow") (HsVar ">>^") Value),("Arrow",Ent (PlainModule "Control.Arrow") (HsCon "Arrow") (Class 0 ["arr","pure",">>>","first","second","***","&&&"])),("ArrowApply",Ent (PlainModule "Control.Arrow") (HsCon "ArrowApply") (Class 1 ["app"])),("ArrowChoice",Ent (PlainModule "Control.Arrow") (HsCon "ArrowChoice") (Class 1 ["left","right","+++","|||"])),("ArrowLoop",Ent (PlainModule "Control.Arrow") (HsCon "ArrowLoop") (Class 1 ["loop"])),("ArrowMonad",Ent (PlainModule "Control.Arrow") (HsCon "ArrowMonad") (Type (TypeInfo {defType = Just Newtype, constructors = [ConInfo {conName = "ArrowMonad", conArity = 1, conFields = Nothing}], fields = []}))),("ArrowMonad",Ent (PlainModule "Control.Arrow") (HsCon "ArrowMonad") (ConstrOf "ArrowMonad" (TypeInfo {defType = Just Newtype, constructors = [ConInfo {conName = "ArrowMonad", conArity = 1, conFields = Nothing}], fields = []}))),("ArrowPlus",Ent (PlainModule "Control.Arrow") (HsCon "ArrowPlus") (Class 1 ["<+>"])),("ArrowZero",Ent (PlainModule "Control.Arrow") (HsCon "ArrowZero") (Class 1 ["zeroArrow"])),("Kleisli",Ent (PlainModule "Control.Arrow") (HsCon "Kleisli") (Type (TypeInfo {defType = Just Newtype, constructors = [ConInfo {conName = "Kleisli", conArity = 1, conFields = Just ["runKleisli"]}], fields = ["runKleisli"]}))),("Kleisli",Ent (PlainModule "Control.Arrow") (HsCon "Kleisli") (ConstrOf "Kleisli" (TypeInfo {defType = Just Newtype, constructors = [ConInfo {conName = "Kleisli", conArity = 1, conFields = Just ["runKleisli"]}], fields = ["runKleisli"]}))),("^<<",Ent (PlainModule "Control.Arrow") (HsVar "^<<") Value),("^>>",Ent (PlainModule "Control.Arrow") (HsVar "^>>") Value),("app",Ent (PlainModule "Control.Arrow") (HsVar "app") (MethodOf "ArrowApply" 1 ["app"])),("arr",Ent (PlainModule "Control.Arrow") (HsVar "arr") (MethodOf "Arrow" 0 ["arr"])),("first",Ent (PlainModule "Control.Arrow") (HsVar "first") (MethodOf "Arrow" 0 ["first"])),("left",Ent (PlainModule "Control.Arrow") (HsVar "left") (MethodOf "ArrowChoice" 1 ["left"])),("leftApp",Ent (PlainModule "Control.Arrow") (HsVar "leftApp") Value),("loop",Ent (PlainModule "Control.Arrow") (HsVar "loop") (MethodOf "ArrowLoop" 1 ["loop"])),("pure",Ent (PlainModule "Control.Arrow") (HsVar "pure") (MethodOf "Arrow" 0 ["pure"])),("returnA",Ent (PlainModule "Control.Arrow") (HsVar "returnA") Value),("right",Ent (PlainModule "Control.Arrow") (HsVar "right") (MethodOf "ArrowChoice" 1 ["right"])),("runKleisli",Ent (PlainModule "Control.Arrow") (HsVar "runKleisli") (FieldOf "Kleisli" (TypeInfo {defType = Just Newtype, constructors = [ConInfo {conName = "Kleisli", conArity = 1, conFields = Just ["runKleisli"]}], fields = ["runKleisli"]}))),("second",Ent (PlainModule "Control.Arrow") (HsVar "second") (MethodOf "Arrow" 0 ["second"])),("zeroArrow",Ent (PlainModule "Control.Arrow") (HsVar "zeroArrow") (MethodOf "ArrowZero" 1 ["zeroArrow"])),("|||",Ent (PlainModule "Control.Arrow") (HsVar "|||") (MethodOf "ArrowChoice" 1 ["|||"]))]