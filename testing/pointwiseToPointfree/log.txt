Cases: 7  Tried: 0  Errors: 0  Failures: 0                                          ### Failure in: 0
("pwToPf",(["Abs.hs"],["6","7","6","17"]))
expected: True
 but got: False
Cases: 7  Tried: 1  Errors: 0  Failures: 1Op InOut
    PointlessP.Functors, needed by InOut Let
    Prelude, needed by Abs Ite Case RecNat InfixOp InOut
                       Let
CMD:["stop"]
CMD:["chase","../../tools/base/tests/HaskellLibraries/"]
Adding Prelude from ../../tools/base/tests/HaskellLibraries//Prelude.hs
Adding Ix from ../../tools/base/tests/HaskellLibraries//Ix.hs
Adding PreludeBuiltin from ../../tools/base/tests/HaskellLibraries//PreludeBuiltin.hs
Adding PreludeIO from ../../tools/base/tests/HaskellLibraries//PreludeIO.hs
Adding PreludeList from ../../tools/base/tests/HaskellLibraries//PreludeList.hs
Adding Char from ../../tools/base/tests/HaskellLibraries//Char.hs
Adding Array from ../../tools/base/tests/HaskellLibraries//Array.hs
Adding List from ../../tools/base/tests/HaskellLibraries//List.hs
Adding Maybe from ../../tools/base/tests/HaskellLibraries//Maybe.hs
Adding Numeric from ../../tools/base/tests/HaskellLibraries//Numeric.hs
Adding Ratio from ../../tools/base/tests/HaskellLibraries//Ratio.hs
Adding PreludeText from ../../tools/base/tests/HaskellLibraries//PreludeText.hs
The project contains 19 source files.
(To list the files, use: pfe files)
Source files missing for (add files with 'pfe add' or 'pfe chase'): 
    PointlessP.Combinators, needed by InOut InfixOp
    PointlessP.Functors, needed by InOut Let
CMD:["stop"]
CMD:["chase","."]
The project contains 19 source files.
(To list the files, use: pfe files)
Source files missing for (add files with 'pfe add' or 'pfe chase'): 
    PointlessP.Combinators, needed by InOut InfixOp
    PointlessP.Functors, needed by InOut Let
CMD:["stop"]
CMD:["pwToPf","Abs.hs","6","7","6","17"]
message: CAUGHT EXCEPTION: user error (Source files missing for (add files with 'pfe add' or 'pfe chase'): 
    PointlessP.Combinators, needed by InOut InfixOp
    PointlessP.Functors, needed by InOut Let)
CMD:["stop"]
4a5,8
> import PointlessP.Combinators
> import PointlessP.RecursionPatterns
> import PointlessP.Isomorphisms
> import PointlessP.Functors
6c10,13
< fun = \x y z -> x
---
> fun = app .
>           (((curry (curry (curry ((snd . fst) . fst)))) .
>                 bang) /\
>                id)
CMD:["pwToPf","Ite.hs","6","11","6","48"]
pfe: interrupted
4a5,8
> import PointlessP.Combinators
> import PointlessP.RecursionPatterns
> import PointlessP.Isomorphisms
> import PointlessP.Functors
6c10,26
< notZero = \x -> if (== 0) x then False else True
---
> notZero = app .
>               (((curry
>                      (app .
>                           ((curry
>                                 ((((inN (_L :: Bool)) . (Right . bang)) \/
>                                       ((inN (_L :: Bool)) . (Left . bang))) .
>                                      distr)) /\
>                                ((ouT (_L :: Bool)) .
>                                     (app .
>                                          ((curry
>                                                ((((inN (_L :: Bool)) . (Left . bang)) \/
>                                                      ((inN (_L :: Bool)) .
>                                                           (Right . bang))) .
>                                                     distr)) /\
>                                               ((ouT (_L :: Int)) . snd))))))) .
>                     bang) /\
>                    id)
