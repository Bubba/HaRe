[("<=<",Ent (PlainModule "Control.Monad") (HsVar "<=<") Value),(">=>",Ent (PlainModule "Control.Monad") (HsVar ">=>") Value),(">>",Ent (PlainModule "Prelude") (HsVar ">>") (MethodOf "Monad" 0 [">>"])),(">>=",Ent (PlainModule "Prelude") (HsVar ">>=") (MethodOf "Monad" 0 [">>="])),("Functor",Ent (PlainModule "Prelude") (HsCon "Functor") (Class 0 ["fmap"])),("Monad",Ent (PlainModule "Prelude") (HsCon "Monad") (Class 0 [">>=",">>","return","fail"])),("MonadPlus",Ent (PlainModule "Control.Monad") (HsCon "MonadPlus") (Class 1 ["mzero","mplus"])),("ap",Ent (PlainModule "Control.Monad") (HsVar "ap") Value),("fail",Ent (PlainModule "Prelude") (HsVar "fail") (MethodOf "Monad" 0 ["fail"])),("filterM",Ent (PlainModule "Control.Monad") (HsVar "filterM") Value),("fmap",Ent (PlainModule "Prelude") (HsVar "fmap") (MethodOf "Functor" 0 ["fmap"])),("foldM",Ent (PlainModule "Control.Monad") (HsVar "foldM") Value),("foldM_",Ent (PlainModule "Control.Monad") (HsVar "foldM_") Value),("forM",Ent (PlainModule "Control.Monad") (HsVar "forM") Value),("forM_",Ent (PlainModule "Control.Monad") (HsVar "forM_") Value),("forever",Ent (PlainModule "Control.Monad") (HsVar "forever") Value),("guard",Ent (PlainModule "Control.Monad") (HsVar "guard") Value),("join",Ent (PlainModule "Control.Monad") (HsVar "join") Value),("liftM",Ent (PlainModule "Control.Monad") (HsVar "liftM") Value),("liftM2",Ent (PlainModule "Control.Monad") (HsVar "liftM2") Value),("liftM3",Ent (PlainModule "Control.Monad") (HsVar "liftM3") Value),("liftM4",Ent (PlainModule "Control.Monad") (HsVar "liftM4") Value),("liftM5",Ent (PlainModule "Control.Monad") (HsVar "liftM5") Value),("mapAndUnzipM",Ent (PlainModule "Control.Monad") (HsVar "mapAndUnzipM") Value),("mplus",Ent (PlainModule "Control.Monad") (HsVar "mplus") (MethodOf "MonadPlus" 1 ["mplus"])),("msum",Ent (PlainModule "Control.Monad") (HsVar "msum") Value),("mzero",Ent (PlainModule "Control.Monad") (HsVar "mzero") (MethodOf "MonadPlus" 1 ["mzero"])),("replicateM",Ent (PlainModule "Control.Monad") (HsVar "replicateM") Value),("replicateM_",Ent (PlainModule "Control.Monad") (HsVar "replicateM_") Value),("return",Ent (PlainModule "Prelude") (HsVar "return") (MethodOf "Monad" 0 ["return"])),("unless",Ent (PlainModule "Control.Monad") (HsVar "unless") Value),("when",Ent (PlainModule "Control.Monad") (HsVar "when") Value),("zipWithM",Ent (PlainModule "Control.Monad") (HsVar "zipWithM") Value),("zipWithM_",Ent (PlainModule "Control.Monad") (HsVar "zipWithM_") Value)]